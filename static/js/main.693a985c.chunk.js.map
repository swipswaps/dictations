{"version":3,"sources":["utils/lang-messages.js","pages/home.js","utils/pico2wave-worker-singleton.js","components/audio.js","components/play-button.js","pages/list.js","text-to-dictation/lexer.js","text-to-dictation/basic-compositor.js","text-to-dictation/pico-renderer.js","text-to-dictation/index.js","pages/dictation/loading.js","pages/dictation/checking.js","pages/dictation/index.js","pages/router.js","pages/index.js","index.js"],"names":["langMessages","defineMessages","langEnGB","id","defaultMessage","langFrFR","langUnknown","getTranslatedLanguage","formatMessage","lang","messages","homeListItem","Home","_this$props","this","props","classes","data","intl","list","Object","keys","map","key","language","react_default","a","createElement","ListItem_default","component","Link","to","button","ListItemText_default","primary","className","root","AppBar_default","position","color","Toolbar_default","Typography_default","variant","index_es","List_default","React","Component","injectIntl","withStyles","flex","pico2waveWorkerSingleton","Worker","process","Audio","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","src","play","audioRef","createRef","current","pause","currentTime","otherProps","objectWithoutProperties","assign","ref","current_state","defaultProps","PlayButton","icon","value","IconButton_default","PlayArrow_default","CircularProgress_default","size","Refresh_default","progress","listListItem","ListDictations","status","bind","assertThisInitialized","timeupdate","pico2waveWorker","onmessage","m","setState","match","params","text","postMessage","event","duration","target","_this2","Number","ListItemSecondaryAction_default","play_button","onClick","backButton","ArrowBack_default","values","audio","onTimeUpdate","marginLeft","marginRight","Lexer","pos","buf","bufLen","length","token","tokens","nextToken","push","skipNonTokens","c","charAt","isPonctuation","processPonctuation","processWord","isWhiteSpace","type","endPos","word","substring","BasicCompositor","sequence","makeSilence","forEach","ponctuation","groups","divideSentence","i","group","sentenceNormal","composeSentence","sentenceSlow","makeComma","composeText","words","minSize","maxSize","_divideSentence","speed","str","val","PicoRenderer","object","renderSentence","renderPonctuation","renderSilence","Math","floor","renderPonctuationEN","renderPonctuationFR","textToDictation","message","tokenize","compose","render","DictationLoading","loading","loadingMessage","Button_default","display","justifyContent","alignItems","flexDirection","marginTop","DictationChecking","userText","view","center","Paper_default","info","square","correction","textSpan","userTextSpan","theme","lineHeight","top","redColor","padding","backgroundColor","lightGreenColor","Dictation","mode","check","change","reload","restart","toolbar","dictation","Check_default","TextField_default","multiline","textField","spellCheck","autoComplete","autoCorrect","autoFocus","onChange","checking","main","margin","fontFamily","HashRouter","CssBaseline_default","Switch","Route","exact","path","home","dictationsData","pages_list","pages_dictation","addLocaleData","concat","toConsumableArray","en","fr","navigator","languages","userLanguage","localeData","toLowerCase","split","Index","locale","router","ReactDOM","pages","document","querySelector"],"mappings":"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","file":"static/js/main.693a985c.chunk.js","sourcesContent":["import {defineMessages} from 'react-intl';\n\nconst langMessages = defineMessages({\n  langEnGB: {\n    id: 'lang.en-GB',\n    defaultMessage: 'english'\n  },\n  langFrFR: {\n    id: 'lang.fr-FR',\n    defaultMessage: 'french'\n  },\n  langUnknown: {\n    id: 'lang.unknown',\n    defaultMessage: 'unknown language'\n  }\n});\n\nfunction getTranslatedLanguage(formatMessage, lang) {\n  switch(lang) {\n    case \"en-GB\":\n      return formatMessage(langMessages.langEnGB);\n    case \"fr-FR\":\n      return formatMessage(langMessages.langFrFR);\n    default:\n      return formatMessage(langMessages.langUnknown);\n  }\n}\n\nexport default getTranslatedLanguage;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from \"react-router-dom\";\nimport {FormattedMessage, defineMessages, injectIntl, intlShape} from 'react-intl';\nimport getTranslatedLanguage from \"../utils/lang-messages\"\n\nconst messages = defineMessages({\n  homeListItem: {\n    id: 'home.listItem',\n    defaultMessage: 'Dictations in {lang}'\n  }\n});\n\nconst styles = {\n  root: {\n    flex: 1\n  }\n};\n\nclass Home extends React.Component {\n  render () {\n    const { classes, data } = this.props;\n    const {formatMessage} = this.props.intl;\n\n    const list = Object.keys(data).map((key) => {\n      const language = getTranslatedLanguage(formatMessage, key);\n\n      return (\n        <ListItem key={key} component={Link} to={\"/list/\" + key} button>\n          <ListItemText primary={formatMessage(messages.homeListItem, {lang: language})} />\n        </ListItem>\n      )\n    });\n\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\" color=\"default\">\n          <Toolbar>\n            <Typography variant=\"title\" color=\"inherit\">\n              <FormattedMessage id=\"home.title\" defaultMessage=\"Dictations\" />\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <List component=\"nav\">\n          {list}\n        </List>\n      </div>\n    )\n  }\n}\n\nHome.propTypes = {\n  classes: PropTypes.object.isRequired,\n  intl: intlShape.isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(Home));\n","/**\n * This singleton is made to prevent multiple times worker loading.\n */\n\nconst pico2waveWorker = new Worker(process.env.PUBLIC_URL + \"/pico2wave/pico2wave-worker.js\");\n\nfunction pico2waveWorkerSingleton() {\n  return pico2waveWorker;\n}\n\nexport default pico2waveWorkerSingleton();\n","import React from \"react\";\nimport PropTypes from 'prop-types';\n\nclass Audio extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      src: null,\n      play: false\n    };\n    this.audioRef = React.createRef();\n  }\n\n  componentDidUpdate () {\n    /**\n     * To perform javascript audio play on mobile device we need to play a blank immediatly after a click user event was fired.\n     * https://stackoverflow.com/questions/12206631/html5-audio-cant-play-through-javascript-unless-triggered-manually-once#answer-12220394\n     */\n    if (this.state.src === null) {\n      this.audioRef.current.src = process.env.PUBLIC_URL + \"/assets/silence.ogg\";\n      this.audioRef.current.play();\n      this.audioRef.current.pause();\n    }\n\n    /**\n     * To prevent the audio to be played twice we only play when the state src\n     * was updated.\n     */\n    if (this.state.play) {\n      this.audioRef.current.play();\n    }\n  }\n\n  static getDerivedStateFromProps(props, current_state) {\n    return {\n      src: props.src,\n      play: (props.src !== current_state.src ? true : false)\n    }\n  }\n\n  restart () {\n    this.audioRef.current.currentTime = 0;\n    this.audioRef.current.play();\n  }\n\n  render () {\n    const {src, ...otherProps} = this.props;\n    return (\n      <audio ref={this.audioRef} src={this.state.src} {...otherProps} />\n    )\n  }\n}\n\nAudio.propTypes = {\n  src: PropTypes.string,\n};\nAudio.defaultProps = {\n  src: null\n};\n\nexport default (Audio);\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nclass PlayButton extends React.Component {\n  render () {\n    const { classes, variant, value, ...otherProps } = this.props;\n\n    var icon;\n    switch (variant) {\n      default:\n      case \"normal\":\n        icon =\n          <IconButton {...otherProps} color=\"inherit\">\n            <PlayArrowIcon />\n          </IconButton>\n        break;\n      case \"progress\":\n        icon =\n          <IconButton color=\"inherit\">\n            <CircularProgress size={24} />\n          </IconButton>\n        break;\n      case \"playing\":\n        icon =\n          <IconButton color=\"inherit\">\n            <CircularProgress size={24} variant=\"static\" value={value} />\n          </IconButton>\n        break;\n      case \"restart\":\n        icon =\n          <IconButton {...otherProps} color=\"inherit\">\n            <RefreshIcon />\n          </IconButton>\n        break;\n    }\n\n    return (\n      <div>\n        {icon}\n      </div>\n    )\n  }\n}\n\nPlayButton.propTypes = {\n  progress: PropTypes.string,\n  value: PropTypes.number,\n};\nPlayButton.defaultProps = {\n  progress: \"normal\",\n  value: 0\n};\n\nexport default (PlayButton);\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from \"react-router-dom\";\nimport pico2waveWorker from \"../utils/pico2wave-worker-singleton\";\nimport Audio from \"../components/audio\";\nimport PlayButton from \"../components/play-button\";\nimport {FormattedMessage, defineMessages, injectIntl, intlShape} from 'react-intl';\nimport getTranslatedLanguage from \"../utils/lang-messages\"\n\nconst messages = defineMessages({\n  listListItem: {\n    id: 'list.listItem',\n    defaultMessage: 'Dictation #{id}'\n  }\n});\n\nconst styles = {\n  root: {\n    flex: 1\n  },\n  backButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  }\n};\n\nclass ListDictations extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      current: null,\n      status: \"normal\",\n      value: 0,\n      src: null\n    };\n\n    this.play = this.play.bind(this);\n    this.timeupdate = this.timeupdate.bind(this);\n    this.pico2waveWorker = pico2waveWorker;\n\n    this.pico2waveWorker.onmessage = (m) => {\n      this.setState({\n        status: \"playing\",\n        src: m.data,\n        value: 0\n      });\n    };\n  }\n\n  play(key) {\n    this.setState({\n      current: key,\n      status: \"progress\",\n      src: null\n    });\n    const lang = this.props.match.params.lang;\n    const text = this.props.data[lang][key];\n    this.pico2waveWorker.postMessage({\n      lang: lang,\n      text: text\n    });\n  }\n\n  timeupdate(event) {\n    const duration = event.target.duration;\n    const currentTime = event.target.currentTime;\n    if (!duration) {\n      return;\n    }\n\n    if (currentTime === duration) {\n      this.setState({\n        status: \"normal\"\n      });\n    } else {\n      const value = (currentTime / duration) * 100;\n      this.setState({\n        value: value\n      });\n    }\n  }\n\n  render () {\n    const { classes, data, match } = this.props;\n    const {formatMessage} = this.props.intl;\n    const lang = match.params.lang;\n    const language = getTranslatedLanguage(formatMessage, lang);\n\n    const list = Object.keys(data[lang]).map((key) => {\n      const current = this.state.current === key ? true : false;\n      const variant = current ? this.state.status : \"normal\";\n      const value = current ? this.state.value : 0;\n      const id = Number(key) + 1;\n\n      return (\n        <ListItem key={key} component={Link} to={\"/dictation/\" + lang + \"/\" + key} button>\n          <ListItemText primary={formatMessage(messages.listListItem, {id: id})} />\n          <ListItemSecondaryAction>\n            <PlayButton onClick={this.play.bind(this, key)} variant={variant} value={value} />\n          </ListItemSecondaryAction>\n        </ListItem>\n      )\n    });\n\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\" color=\"default\">\n          <Toolbar>\n            <IconButton component={Link} to=\"/\" className={classes.backButton} color=\"inherit\">\n              <ArrowBackIcon />\n            </IconButton>\n            <Typography variant=\"title\" color=\"inherit\">\n              <FormattedMessage id=\"list.title\" defaultMessage=\"Dictations in {lang}\" values={{lang: language}} />\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <List component=\"nav\">\n          {list}\n        </List>\n        <Audio src={this.state.src} onTimeUpdate={this.timeupdate} />\n      </div>\n    )\n  }\n}\n\nListDictations.propTypes = {\n  classes: PropTypes.object.isRequired,\n  intl: intlShape.isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(ListDictations));\n","class Lexer {\n  constructor(text) {\n    this.pos = 0;\n    this.buf = text;\n    this.bufLen = text.length;\n  }\n\n  tokenize() {\n    var tokens = []\n    var token;\n    while ((token = this.nextToken()) !== null) {\n      tokens.push(token);\n    }\n    return tokens;\n  }\n\n  nextToken() {\n    this.skipNonTokens();\n    if (this.pos >= this.bufLen) {\n      return null;\n    }\n\n    const c = this.buf.charAt(this.pos);\n    if (this.isPonctuation(c)) {\n      return this.processPonctuation();\n    } else {\n      return this.processWord();\n    }\n  }\n\n  skipNonTokens() {\n    while (this.pos < this.bufLen) {\n      const c = this.buf.charAt(this.pos);\n      if (this.isWhiteSpace(c)) {\n        this.pos++;\n      } else {\n        break;\n      }\n    }\n  }\n\n  isWhiteSpace(c) {\n    return c === ' ' || c === '\\t' || c === '\\r' || c === '\\n';\n  }\n\n  isPonctuation(c) {\n    return c === ',' || c === ';' || c === '?' || c === '!' || c === '.';\n  }\n\n  processPonctuation() {\n    const pos = this.pos;\n    const c = this.buf.charAt(this.pos);\n    this.pos++;\n    const token = {\n      type: \"PONCTUATION\",\n      value: c,\n      pos: pos\n    }\n    return token;\n  }\n\n  processWord() {\n    const pos = this.pos;\n    var endPos = pos + 1;\n\n    while (endPos < this.bufLen) {\n      const c = this.buf.charAt(endPos);\n      if (this.isWhiteSpace(c) || this.isPonctuation(c)) {\n        break;\n      }\n      endPos++;\n    }\n\n    const word = this.buf.substring(pos, endPos);\n    this.pos = endPos;\n\n    const token = {\n      type: \"WORD\",\n      value: word,\n      pos: pos\n    }\n    return token;\n  }\n}\n\nexport default Lexer;\n","class BasicCompositor {\n  static compose(tokens) {\n    var sequence = [];\n\n    sequence.push (this.makeSilence(2));\n\n    var buf = [];\n    tokens.forEach(token => {\n      switch (token.type) {\n        case \"WORD\":\n          buf.push (token);\n          break;\n        case \"PONCTUATION\":\n          const ponctuation = token;\n          const groups = this.divideSentence (buf, 4, 5);\n          for (var i = 0; i < groups.length; i++) {\n            const group = groups[i];\n            if (i === groups.length - 1) {\n              const sentenceNormal = this.composeSentence(group, ponctuation, 1.0);\n              const sentenceSlow = this.composeSentence(group, ponctuation, 0.7);\n              sequence.push (sentenceNormal);\n              sequence.push (ponctuation);\n              sequence.push (this.makeSilence(2));\n              sequence.push (sentenceSlow);\n              sequence.push (ponctuation);\n            } else {\n              const sentenceNormal = this.composeSentence(group, this.makeComma(), 1.0);\n              const sentenceSlow = this.composeSentence(group, this.makeComma(), 0.7);\n              sequence.push (sentenceNormal);\n              sequence.push (this.makeSilence(2));\n              sequence.push (sentenceSlow);\n            }\n            sequence.push (this.makeSilence(3));\n          };\n          buf = [];\n          break;\n        default:\n          break;\n      }\n    });\n\n    sequence.push (this.makeSilence(6));\n    const text = this.composeText (tokens, 0.8);\n    sequence.push (text);\n\n    return sequence;\n  }\n\n  static divideSentence (words, minSize, maxSize) {\n    if (words.length % minSize === 0) {\n      return this._divideSentence(words, minSize);\n    }\n    if (words.length % maxSize === 0) {\n      return this._divideSentence(words, maxSize);\n    }\n    if (words.length % minSize > words.length % maxSize) {\n      return this._divideSentence(words, minSize);\n    } else {\n      return this._divideSentence(words, maxSize);\n    }\n  }\n  static _divideSentence (words, size) {\n    var groups = [];\n\n    var group = [];\n    for (var i = 0; i < words.length; i++) {\n      group.push (words[i]);\n      if ((i > 0 && i % size === 0) || i === words.length -1) {\n        groups.push (group);\n        group = [];\n      }\n    }\n\n    return groups;\n  }\n\n\n  static composeSentence(words, ponctuation, speed) {\n    var str = \"\";\n    for (var i = 0; i < words.length; i++) {\n      str += words[i].value;\n      if (i < words.length - 1) {\n        str += \" \";\n      }\n    }\n    if (ponctuation) {\n      str += ponctuation.value;\n    }\n    return {\n      type: \"SENTENCE\",\n      value: str,\n      speed: speed\n    }\n  }\n\n  static makeSilence(val) {\n    return {\n      type: \"SILENCE\",\n      value: val\n    }\n  }\n\n  static makeComma() {\n    return {\n      type: \"PONCTUATION\",\n      value: ','\n    }\n  }\n\n  static composeText(tokens, speed) {\n    var str = \"\";\n    for (var i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n      str += token.value;\n\n      if (i < tokens.length - 1) {\n        const nextToken = tokens[i+1];\n        if (nextToken.type !== \"PONCTUATION\") {\n          str += \" \";\n        }\n      }\n    }\n    return {\n      type: \"SENTENCE\",\n      value: str,\n      speed: speed\n    }\n  }\n}\n\nexport default BasicCompositor;\n","class PicoRenderer {\n  static render(sequence, lang) {\n    var text = \"\";\n\n    sequence.forEach(object => {\n      switch (object.type) {\n        case \"SENTENCE\":\n          text += this.renderSentence (object);\n          break;\n        case \"PONCTUATION\":\n          text += this.renderPonctuation (object, lang);\n          break;\n        case \"SILENCE\":\n          text += this.renderSilence (object);\n          break;\n        default:\n          break;\n      }\n      text += \" \";\n    });\n\n    return text;\n  }\n\n  static renderSentence(object) {\n    const speed = Math.floor(object.speed * 100);\n    return \"<speed level='\" + speed +\"'>\" + object.value + \"</speed>\";\n  }\n  static renderPonctuation(object, lang) {\n    switch (lang) {\n      case \"en-GB\":\n        return this.renderPonctuationEN(object);\n      case \"fr-FR\":\n        return this.renderPonctuationFR(object);\n      default:\n        break;\n    }\n  }\n  static renderPonctuationEN(object) {\n    switch (object.value) {\n      case '?':\n        return \"<speed level='100'>Question mark.</speed>\";\n      case '.':\n        return \"<speed level='100'>Full stop.</speed>\";\n      case ',':\n        return \"<speed level='100'>Comma,</speed>\";\n      case ';':\n        return \"<speed level='100'>Semicolon;</speed>\";\n      case '!':\n        return \"<speed level='100'>Exclamation mark.</speed>\";\n      default:\n        break;\n    }\n  }\n  static renderPonctuationFR(object) {\n    switch (object.value) {\n      case '?':\n        return \"<speed level='100'>Point d'intérogation.</speed>\";\n      case '.':\n        return \"<speed level='100'>Point.</speed>\";\n      case ',':\n        return \"<speed level='100'>Virgule,</speed>\";\n      case ';':\n        return \"<speed level='100'>Point virgule;</speed>\";\n      case '!':\n        return \"<speed level='100'>Point d'exclamation.</speed>\";\n      default:\n        break;\n    }\n  }\n  static renderSilence(object) {\n    var str = \"\";\n    for (var i = 0; i < object.value; i++) {\n      str += \"xx\";\n    }\n    return \"<volume level='0'>\" + str +\".</volume>\";\n  }\n}\n\nexport default PicoRenderer;\n","import Lexer from './lexer';\nimport BasicCompositor from './basic-compositor'\nimport PicoRenderer from './pico-renderer'\n\nfunction textToDictation(message) {\n  const lexer = new Lexer (message.text);\n  const tokens = lexer.tokenize();\n\n  const sequence = BasicCompositor.compose(tokens);\n\n  const result = PicoRenderer.render (sequence, message.lang);\n\n  return result;\n}\n\nexport default textToDictation;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport {FormattedMessage} from 'react-intl';\n\nconst styles = {\n  root: {\n    flex: 1,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  loading: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  loadingMessage: {\n    marginTop: 10\n  }\n};\n\nclass DictationLoading extends React.Component {\n  render () {\n    const { classes, progress, ...otherProps } = this.props;\n    const message = progress ? (\n      <div className={classes.loading}>\n        <CircularProgress size={24} />\n        <div className={classes.loadingMessage}>\n          <FormattedMessage id=\"loading.message\" defaultMessage=\"Dictation is being prepared\" />\n        </div>\n      </div>\n    ) : (\n      <Button variant=\"contained\" color=\"primary\" {...otherProps}>\n        <FormattedMessage id=\"loading.button\" defaultMessage=\"Start dictation\" />\n      </Button>\n    );\n\n    return (\n      <div className={classes.root}>\n        {message}\n      </div>\n    )\n  }\n}\n\nDictationLoading.propTypes = {\n  progress: PropTypes.bool,\n};\nDictationLoading.defaultProps = {\n  progress: false\n};\n\nexport default withStyles(styles)(DictationLoading);\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport lightGreenColor from '@material-ui/core/colors/lightGreen';\nimport redColor from '@material-ui/core/colors/red';\nimport {FormattedMessage} from 'react-intl';\n\nconst styles = theme => {\n  return {\n  root: {\n    flex: 1,\n    display: 'flex'\n  },\n  correction: {\n    flex: 1,\n    position: 'relative',\n    marginLeft: 12,\n    marginTop: '-0.5em',\n    marginRight: 12\n  },\n  textSpan: {\n    lineHeight: '4em'\n  },\n  userText: {\n    position: 'absolute',\n    top: '1.5em'\n  },\n  userTextSpan: {\n    lineHeight: '4em',\n    color: redColor['A700']\n  },\n  center: {\n    flex: 1,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  info: {\n    padding: 16,\n    backgroundColor: lightGreenColor['A200']\n  }\n  }\n};\n\nclass DictationChecking extends React.Component {\n  render () {\n    const { classes, text, userText } = this.props;\n\n    const correct = text === userText;\n\n    const view = correct ? (\n      <div className={classes.center}>\n        <Paper className={classes.info} square={false}>\n          <FormattedMessage id=\"checking.info\" defaultMessage=\"Good job !\" />\n        </Paper>\n      </div>\n    ) : (\n      <div className={classes.correction}>\n        <div>\n          <span className={classes.textSpan}>{text}</span>\n        </div>\n        <div className={classes.userText}>\n          <span className={classes.userTextSpan}>{userText}</span>\n        </div>\n      </div>\n    )\n\n    return (\n      <div className={classes.root}>\n        {view}\n      </div>\n    )\n  }\n}\n\nDictationChecking.propTypes = {\n  text: PropTypes.string.isRequired,\n  userText: PropTypes.string.isRequired\n};\nDictationChecking.defaultProps = {\n  text: \"\",\n  userText: \"\"\n};\n\nexport default withStyles(styles)(DictationChecking);\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport { Link } from \"react-router-dom\";\nimport {FormattedMessage} from 'react-intl';\nimport pico2waveWorker from \"../../utils/pico2wave-worker-singleton\";\nimport textToDictation from \"../../text-to-dictation\"\nimport DictationLoading from \"./loading\"\nimport DictationChecking from \"./checking\"\nimport TextField from '@material-ui/core/TextField';\nimport CheckIcon from '@material-ui/icons/Check';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport Audio from \"../../components/audio\";\nimport PlayButton from \"../../components/play-button\";\n\nconst styles = {\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    flex: 1\n  },\n  backButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  flex: {\n    flex: 1,\n  },\n  main: {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  textField: {\n    flex: 1,\n    margin: 20\n  },\n  toolbar: {\n    display: 'flex'\n  }\n};\n\nclass Dictation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: \"playing\",\n      value: 0,\n      src: null,\n      progress: false,\n      text: \"\",\n      mode: \"loading\",\n      userText: \"\"\n    };\n\n    this.play = this.play.bind(this);\n    this.check = this.check.bind(this);\n    this.change = this.change.bind(this);\n    this.reload = this.reload.bind(this);\n    this.restart = this.restart.bind(this);\n    this.timeupdate = this.timeupdate.bind(this);\n\n    this.audioRef = React.createRef();\n\n    this.pico2waveWorker = pico2waveWorker;\n    this.pico2waveWorker.onmessage = (m) => {\n      this.setState({\n        progress: false,\n        src: m.data\n      });\n    };\n  }\n\n  static getDerivedStateFromProps(props, current_state) {\n    const { match, data } = props;\n    const lang = match.params.lang;\n    const id = match.params.id;\n    const text = data[lang][id];\n\n    var progress;\n    var mode = current_state.mode;\n    if (text !== current_state.text) {\n      progress = true;\n      mode = \"loading\";\n    } else {\n      progress = false;\n    }\n\n    return {\n      id: id,\n      text: text,\n      progress: progress,\n      mode: mode\n    }\n  }\n\n  play () {\n    this.setState({\n      mode: \"playing\",\n      status: \"playing\"\n    });\n  }\n\n  check () {\n    this.setState({mode: \"checking\"});\n  }\n\n  reload () {\n    this.setState({\n      mode: \"playing\",\n      userText: \"\"\n    });\n  }\n\n  change (event) {\n    const userText = event.target.value;\n    this.setState({userText: userText});\n  }\n\n  timeupdate(event) {\n    const duration = event.target.duration;\n    const currentTime = event.target.currentTime;\n    if (!duration) {\n      return;\n    }\n\n    if (currentTime === duration) {\n      this.setState({\n        status: \"restart\"\n      });\n    } else {\n      const value = (currentTime / duration) * 100;\n      this.setState({\n        value: value\n      });\n    }\n  }\n\n  restart() {\n    this.setState({\n      status: \"playing\",\n      value: 0\n    });\n    this.audioRef.current.restart();\n  }\n\n  render () {\n    const { classes, match } = this.props;\n    const lang = match.params.lang;\n    const id = Number(this.state.id) + 1;\n\n    if (this.state.progress) {\n      const dictation = textToDictation({\n        lang: lang,\n        text: this.state.text\n      });\n      this.pico2waveWorker.postMessage({\n        lang: lang,\n        text: dictation\n      });\n    }\n\n    var toolbar;\n    switch (this.state.mode) {\n      default:\n      case \"loading\":\n        toolbar = null;\n        break;\n      case \"playing\":\n        const variant = this.state.status;\n        const value = this.state.status === \"playing\" ? this.state.value : 0;\n        toolbar =\n          <div className={classes.toolbar}>\n            <PlayButton onClick={this.restart} variant={variant} value={value} />\n            <IconButton color=\"inherit\" onClick={this.check}>\n              <CheckIcon />\n            </IconButton>\n          </div>\n        break;\n      case \"checking\":\n        toolbar =\n          <IconButton color=\"inherit\" onClick={this.reload}>\n            <RefreshIcon />\n          </IconButton>\n        break;\n    }\n\n\n    var view;\n    switch (this.state.mode) {\n      default:\n      case \"loading\":\n        view = <DictationLoading progress={this.state.progress} onClick={this.play} />\n        break;\n      case \"playing\":\n        view =\n          <TextField\n            id=\"multiline-static\"\n            multiline\n            className={classes.textField}\n            spellCheck=\"false\" autoComplete=\"off\" autoCorrect=\"off\"\n            autoFocus={true}\n            onChange={this.change}\n          />\n        break;\n      case \"checking\":\n        view = <DictationChecking text={this.state.text} userText={this.state.userText} />\n        break;\n    }\n\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\" color=\"default\">\n          <Toolbar>\n            <IconButton component={Link} to={\"/list/\" + lang} className={classes.backButton} color=\"inherit\">\n              <ArrowBackIcon />\n            </IconButton>\n            <Typography variant=\"title\" color=\"inherit\" className={classes.flex}>\n              <FormattedMessage id=\"dictation.title\" defaultMessage=\"Dictation #{id}\" values={{id: id}} />\n            </Typography>\n            {toolbar}\n          </Toolbar>\n        </AppBar>\n        <div className={classes.main}>\n          {view}\n        </div>\n        <Audio src={this.state.mode === \"playing\" ? this.state.src : null} onTimeUpdate={this.timeupdate} ref={this.audioRef} />\n      </div>\n    )\n  }\n}\n\nDictation.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Dictation);\n","import \"typeface-roboto\";\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\nimport Home from './home';\nimport ListDictations from './list';\nimport Dictation from './dictation/index';\nimport dictationsData from '../data/dictations';\n\nconst styles = {\n  root: {\n    fontFamily: 'Roboto',\n    display: 'flex',\n    flexDirection: 'column',\n    flex: 1\n  }\n};\n\nfunction Router(props) {\n  const { classes } = props;\n  return (\n    <HashRouter>\n      <div className={classes.root}>\n        <CssBaseline />\n        <Switch>\n          <Route exact path=\"/\" component={(props) => (<Home {...props} data={dictationsData} />)}/>\n          <Route path=\"/list/:lang\" component={(props) => (<ListDictations {...props} data={dictationsData} />)}/>\n          <Route path=\"/dictation/:lang/:id\" component={(props) => (<Dictation {...props} data={dictationsData} />)}/>\n        </Switch>\n      </div>\n    </HashRouter>\n  );\n}\n\nRouter.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Router);\n","import React from \"react\";\nimport { IntlProvider, addLocaleData } from 'react-intl';\nimport en from 'react-intl/locale-data/en';\nimport fr from 'react-intl/locale-data/fr';\nimport Router from './router';\nimport localeData from '../data/locales'\n\naddLocaleData([...en, ...fr]);\n\nconst language = (navigator.languages && navigator.languages[0]) || navigator.language || navigator.userLanguage;\nconst languageWithoutRegionCode = language.toLowerCase().split(/[_-]+/)[0];\nconst messages = localeData[languageWithoutRegionCode] || localeData[language] || localeData.en;\n\nfunction Index(props) {\n  return (\n    <IntlProvider locale={language} messages={messages}>\n      <Router />\n    </IntlProvider>\n  );\n}\n\nexport default Index;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Index from './pages/index'\n\nReactDOM.render(<Index />, document.querySelector(\"#app\"));\n"],"sourceRoot":""}